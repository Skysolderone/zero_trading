// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v3.19.4
// source: trading.proto

package trading

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetTradingSignalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signal        string                 `protobuf:"bytes,1,opt,name=signal,proto3" json:"signal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTradingSignalRequest) Reset() {
	*x = SetTradingSignalRequest{}
	mi := &file_trading_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTradingSignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTradingSignalRequest) ProtoMessage() {}

func (x *SetTradingSignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTradingSignalRequest.ProtoReflect.Descriptor instead.
func (*SetTradingSignalRequest) Descriptor() ([]byte, []int) {
	return file_trading_proto_rawDescGZIP(), []int{0}
}

func (x *SetTradingSignalRequest) GetSignal() string {
	if x != nil {
		return x.Signal
	}
	return ""
}

type SetTradingSignalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTradingSignalResponse) Reset() {
	*x = SetTradingSignalResponse{}
	mi := &file_trading_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTradingSignalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTradingSignalResponse) ProtoMessage() {}

func (x *SetTradingSignalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trading_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTradingSignalResponse.ProtoReflect.Descriptor instead.
func (*SetTradingSignalResponse) Descriptor() ([]byte, []int) {
	return file_trading_proto_rawDescGZIP(), []int{1}
}

func (x *SetTradingSignalResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SetTradingSignalResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetTradingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTradingRequest) Reset() {
	*x = GetTradingRequest{}
	mi := &file_trading_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTradingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradingRequest) ProtoMessage() {}

func (x *GetTradingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradingRequest.ProtoReflect.Descriptor instead.
func (*GetTradingRequest) Descriptor() ([]byte, []int) {
	return file_trading_proto_rawDescGZIP(), []int{2}
}

func (x *GetTradingRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTradingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTradingResponse) Reset() {
	*x = GetTradingResponse{}
	mi := &file_trading_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTradingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradingResponse) ProtoMessage() {}

func (x *GetTradingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trading_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradingResponse.ProtoReflect.Descriptor instead.
func (*GetTradingResponse) Descriptor() ([]byte, []int) {
	return file_trading_proto_rawDescGZIP(), []int{3}
}

func (x *GetTradingResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetTradingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_trading_proto protoreflect.FileDescriptor

var file_trading_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x31, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x22, 0x48, 0x0a, 0x18, 0x53,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xb0,
	0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x57, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x20, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trading_proto_rawDescOnce sync.Once
	file_trading_proto_rawDescData = file_trading_proto_rawDesc
)

func file_trading_proto_rawDescGZIP() []byte {
	file_trading_proto_rawDescOnce.Do(func() {
		file_trading_proto_rawDescData = protoimpl.X.CompressGZIP(file_trading_proto_rawDescData)
	})
	return file_trading_proto_rawDescData
}

var file_trading_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_trading_proto_goTypes = []any{
	(*SetTradingSignalRequest)(nil),  // 0: trading.SetTradingSignalRequest
	(*SetTradingSignalResponse)(nil), // 1: trading.SetTradingSignalResponse
	(*GetTradingRequest)(nil),        // 2: trading.GetTradingRequest
	(*GetTradingResponse)(nil),       // 3: trading.GetTradingResponse
}
var file_trading_proto_depIdxs = []int32{
	0, // 0: trading.TradingService.SetTradingSignal:input_type -> trading.SetTradingSignalRequest
	2, // 1: trading.TradingService.GetTrading:input_type -> trading.GetTradingRequest
	1, // 2: trading.TradingService.SetTradingSignal:output_type -> trading.SetTradingSignalResponse
	3, // 3: trading.TradingService.GetTrading:output_type -> trading.GetTradingResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_trading_proto_init() }
func file_trading_proto_init() {
	if File_trading_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trading_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trading_proto_goTypes,
		DependencyIndexes: file_trading_proto_depIdxs,
		MessageInfos:      file_trading_proto_msgTypes,
	}.Build()
	File_trading_proto = out.File
	file_trading_proto_rawDesc = nil
	file_trading_proto_goTypes = nil
	file_trading_proto_depIdxs = nil
}
